name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

    - name: Format check with black
      run: |
        black --check --diff .

    - name: Import sorting check with isort
      run: |
        isort --check-only --diff .

    - name: Type check with mypy
      run: |
        mypy core/ utils/ --ignore-missing-imports
      continue-on-error: true  # Allow type check failures initially

    - name: Security check with bandit
      run: |
        bandit -r . -ll -x tests/
      continue-on-error: true  # Allow security warnings initially

    - name: Test with pytest
      env:
        # Mock API keys for testing (tests should not make real API calls)
        OPENAI_API_KEY: test-key-mock
        ANTHROPIC_API_KEY: test-key-mock
        GOOGLE_API_KEY: test-key-mock
      run: |
        pytest tests/ -v --tb=short

    - name: Test with pytest and coverage
      env:
        OPENAI_API_KEY: test-key-mock
        ANTHROPIC_API_KEY: test-key-mock
        GOOGLE_API_KEY: test-key-mock
      run: |
        pytest tests/ --cov=core --cov=utils --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
